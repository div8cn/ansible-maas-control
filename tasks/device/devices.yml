---
- name: MAAS | DEVICES | get list of machines which have correct maas type
  set_fact:
    maas_type_devices: >-
     {%- set device_list = [] %}
     {%- for host, value in hostvars.items() %}
     {%-   if value.maas_type is defined %}
     {%-     if value.maas_type == 'device' %}
     {{- device_list.append(host) -}}
     {%-     endif %}
     {%-   elif default_maas_type == 'device' %}
     {{- device_list.append(host) -}}
     {%-   endif %}
     {%- endfor %}
     {{- device_list | intersect(groups[maas_managed_inventory_group|quote]) -}}
  tags:
    - devices

- name: MAAS | DEVICES | get current subnets
  command: maas {{ maas_user }} subnets read
  changed_when: false
  register: maas_subnets_command
  when: maas_type_devices | length > 0
  tags:
    - devices

- name: MAAS | DEVICES | set fact of devices
  set_fact:
    maas_subnets: "{{ maas_subnets_command.stdout | from_json }}"
  when: maas_type_devices | length > 0
  tags:
    - devices

- name: MAAS | DEVICES | create devices
  include: device/set_devices.yml
  with_items: "{{ maas_type_devices }}"
  when: maas_type_devices | length > 0
  tags:
    - devices
